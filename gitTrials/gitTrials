Instructions:

Create a new folder for this project, run all commands from this folder (name it git_section_3) *
A: mkdir git_section_3
Change directories into git_section_3 *
A: cd git_section_3
Initialize a Git repository to begin tracking your project *
A: git init
Create 3 new files using the touch command (name them file1.txt, file2.html, and file3.js) *
A: touch filename1.ext ... etc
Create 1 new folder named random_files *
A: mkdir folderName
Move the text file (.txt) and the javascript file (.js) into the random_files directory *
A: move filename.ext folderName
Check the status of your repository (you will only see the random_files directory listed, not the files inside it) *
A: git status
Add all newly created/untracked files and folders to the staging area *
A: git add -A
Check the status of your repository *
A: git status
Remove file3.js from the staging area *
A: git rm --cached folderName\filename.ext
Create 3 new files in the random_files directory (name them file4.css, file5.css, and file6.js)
A: touch file4.css ... etc
Check the status of your repository
A: git status
Add all files with the file type of .css to the staging area (hint: you need to be inside of the random_files directory)
A: git add *.css
Check the status of your repository
A: git status
Add all files with the file type of .js to the staging area
A: git add *.js
Check the status of your repository
A: git status
Create a new directory named secret_stuff (hint: make sure you cd back into git_section_3 first)
A: cd..
A: mkdir secret_stuff
Create two files inside of secret_stuff named file1.yml and file2.js
A: cd secret_stuff
A: touch file1.yml ... etc
Create a .gitignore file so we can ignore the secret_stuff directory and all of its contents (hint: .gitignore should be inside of git_section_3)
A: cd..
A: touch .gitignore
Add the secret_stuff folder to the .gitignore file
A: manually add the folder to .gitignore and save
Check the status of your repository
A: git status
Add the .gitignore file to the staging area
A: git add .gitignore
If your staging area looks like the image below then you have completed this exercise successfully. You may now commit your changes
A: git status